name: main

on: [workflow_dispatch, pull_request]

env:
  AWS_REGION: af-south-1
  AWS_ROLE: cat-genrl-prd-infra-gh-tf-aws-github-runners
  TERRAFORM_MIN_SUPPORTED_VERSION: 0.15.0

permissions:
  id-token: write
  contents: read

jobs:
  python_lint:
    name: üêç Python file formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          flake8
          black .

  terraform_lint:
    name: üèó Terraform file format
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/setup-terraform@v2
      - uses: dflook/terraform-fmt-check@v1
        with:
          path: .

  pre_commit:
    name: üíç pre-commit
    needs: [python_lint, terraform_lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: hashicorp/setup-terraform@v2
      - name: Install binaries
        run: |
          mkdir -p .binaries && cd .binaries

          # terraform-docs
          curl -sSLo ./terraform-docs-v0.16.0-linux-amd64.tar.gz https://terraform-docs.io/dl/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz
          tar -xzf terraform-docs-v0.16.0-linux-amd64.tar.gz
          chmod +x terraform-docs
          mv terraform-docs /usr/local/bin/terraform-docs

          # tfsec
          curl -sSLo ./tfsec_1.28.0_linux_amd64.tar.gz https://github.com/aquasecurity/tfsec/releases/download/v1.28.0/tfsec_1.28.0_linux_amd64.tar.gz
          mv tfsec_1.28.0_linux_amd64.tar.gz tfsec.tar.gz
          tar -xzf tfsec.tar.gz
          chmod +x tfsec
          mv tfsec /usr/local/bin/tfsec

          # tflint
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

          cd ..
      - name: Install requirements
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      - name: Run
        run: |
          source .venv/bin/activate
          pre-commit install
          ls .git/
          conventional-pre-commit .git/COMMIT_MSG
          pre-commit run --all-files --show-diff-on-failure

  tests:
    needs: [python_lint, terraform_lint, pre_commit]
    name: ‚úÖ tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: hashicorp/setup-terraform@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ env.AWS_ROLE }}
          role-duration-seconds: 3600
      - name: Install binaries
        run: |
          mkdir -p .binaries && cd .binaries

          # terraform (min supported version)
          curl -sSLo ./terraform_${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }}_linux_amd64.zip https://releases.hashicorp.com/terraform/${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }}/terraform_${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }}_linux_amd64.zip
          unzip terraform_${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }}_linux_amd64.zip
          mv terraform terraform-${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }}
          chmod +x terraform-${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }}
          mv terraform-${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }} /usr/local/bin/terraform-${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }}

          cd ..
      - name: Install requirements
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      - name: Run
        run: |
          source .venv/bin/activate
          echo "::echo::off"
          pytest -m "not terraform_min_supported_version"
          pytest -m "terraform_min_supported_version" --terraform-binary terraform-${{ env.TERRAFORM_MIN_SUPPORTED_VERSION }}
        env:
          PYTEST_ADDOPTS: "--color=yes"
        timeout-minutes: 10
